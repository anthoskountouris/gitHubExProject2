# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

GET     /api        controllers.ApplicationController.index

POST     /create      controllers.ApplicationController.create()
GET     /read/:username      controllers.ApplicationController.read(username:String)
PUT     /update/:username     controllers.ApplicationController.update(username:String)
DELETE      /delete/:username     controllers.ApplicationController.delete(username:String)

GET     /github/users/:username     controllers.ApplicationController.getGithubUser(username:String)

GET    /github/addUser/:username       controllers.ApplicationController.addGithubUserFromApi(username: String)

GET /github/users/:username/repositories        controllers.ApplicationController.getUserRepos(username:String)

GET /github/users/:username/repos/:repoName     controllers.ApplicationController.getRepoContent(username:String, repoName:String)

GET /github/users/:username/repos/:repoName/*path       controllers.ApplicationController.getFileOrDirContent(username:String, repoName:String, path:String)

PUT /github/users/:username/repos/:repoName/create/*path       controllers.ApplicationController.createFile(username:String, repoName:String, path:String)

PUT /github/users/:username/repos/:repoName/update/*path       controllers.ApplicationController.updateFile(username:String, repoName:String, path:String)

DELETE /github/users/:username/repos/:repoName/delete/*path       controllers.ApplicationController.deleteFile(username:String, repoName:String, path:String)

# Github API operations
GET /github/users/:username/addFileForm/repos/:repoName    controllers.ApplicationController.addFile(username:String, repoName:String)
POST /github/users/:username/addFileForm/repos/:repoName    controllers.ApplicationController.addFileForm(username:String, repoName:String)

GET /github/users/:username/updateFileForm/repos/:repoName/:file_path controllers.ApplicationController.editFile(username:String, repoName:String, file_path:String)
POST /github/users/:username/updateFileForm/repos/:repoName/:file_path controllers.ApplicationController.editFileForm(username:String, repoName:String, file_path:String)

POST /github/users/:username/delete/repos/:repoName/:file_path controllers.ApplicationController.deleteFileForm(username:String, repoName:String, file_path:String)

#The only valid values for the method attribute are get and post, corresponding to the GET and POST HTTP methods.
#<form method="put"> is invalid HTML and will be treated like <form>

# The following link is a reposiory to test the CRUD mthods
# https://api.github.com/repos/anthoskountouris/GitHubTest/contents

# Curl commands for CRUD methods:

# READ
# You can read the content/repositories ussing the GET routes above

# CREATE
# curl -i -X PUT -H "Accept: application/json" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -d '{"message":"my new new commit message","content":"Apoel Thrilos"}' localhost:9000/github/users/anthoskountouris/repos/GitHubTest/create/ram10.py

# UPDATE
# curl -i -X PUT -H "Accept: application/json" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -d '{"message":"my new commit message","content":"Apoel Thrilos AU79 Orange Madness", "sha": "1fcf2214bee9f427377ed5e1c228ab2168ae009a"}' localhost:9000/github/users/anthoskountouris/repos/GitHubTest/update/ram10.py

# DELETE
# curl -i -X DELETE -H "Accept: application/json" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -d '{"message":"my commit new message","sha": "59539bb07188d94a802d973b51dedb366b40198d"}' localhost:9000/github/users/anthoskountouris/repos/GitHubTest/delete/ram10.py

